import asyncio

from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, BotCommand, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from rbk1 import *



bot = Bot(token='7086038652:AAEKbcrL_Mod-9KNUf2jZGNBE_ZYj7ti0jg') #–∑–∞–≤–µ—Ä—à–∏—Ç—å - ctrl + C
dp = Dispatcher()



@dp.message(Command("start"))
async def start_handler(msg: Message):
    hello = '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–æ–±—â–∏—Ç —Ç–µ–±–µ, –∫–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω–∏–∫! –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è =) –ß—Ç–æ –∂–µ–ª–∞–µ—à—å —É–∑–Ω–∞—Ç—å?'
    await bot.set_my_commands([
        BotCommand(command='start', description='–ó–∞–ø—É—Å–∫/–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞'),
        BotCommand(command='help', description='–ü–æ–º–æ—â—å'),
        BotCommand(command='info_today', description='–ó–∞ —á—Ç–æ –ø—å–µ–º?'),
    ])
    
    markup = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text=hello)]])

    inline_markup = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='üåç –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏', callback_data='1'),
            InlineKeyboardButton(text='üá∑üá∫ –ü—Ä–∞–∑–¥–Ω–∏–∫–∏ –≤ –†–æ—Å—Å–∏–∏',callback_data='2')
        ],
        [
            InlineKeyboardButton(text='‚ò¶Ô∏è –¶–µ—Ä–∫–æ–≤–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏',callback_data='3'),
            InlineKeyboardButton(text='üéÇ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–µ–π',callback_data='4')
        ],
        [
            InlineKeyboardButton(text='ü™∂–ü–∞–º—è—Ç–Ω—ã–µ –¥–∞—Ç—ã –≤ –∏—Å—Ç–æ—Ä–∏–∏',callback_data='5'),
            InlineKeyboardButton(text='üéÅ –ö—Ç–æ —Å–µ–≥–æ–¥–Ω—è –æ—Ç–º–µ—á–∞–µ—Ç –∏–º–µ–Ω–∏–Ω—ã',callback_data='6')
        ]
    ])
    await msg.answer(text=hello, reply_markup=inline_markup)

@dp.callback_query(F.data == '1')
async def callback_query_handler(callback_query:CallbackQuery):
    await callback_query.message.answer(text = word_s)

@dp.callback_query(F.data == '2')
async def callback_query_handler(callback_query:CallbackQuery):
    await callback_query.message.answer(text = rus_s)

@dp.callback_query(F.data == '3')
async def callback_query_handler(callback_query:CallbackQuery):
    await callback_query.message.answer(text = church_s)

@dp.callback_query(F.data == '4')
async def callback_query_handler(callback_query:CallbackQuery):
    await callback_query.message.answer(text = birthday_s)

@dp.callback_query(F.data == '5')
async def callback_query_handler(callback_query:CallbackQuery):
    await callback_query.message.answer(text = history_s)


@dp.callback_query(F.data == '6')
async def callback_query_handler(callback_query:CallbackQuery):
    await callback_query.message.answer(text = imenins_s)

@dp.message(Command('help'))
async def cmd_help(message: Message):
    file = open('help.txt', 'r', encoding='utf-8')
    text = file.read()
    await message.answer(text) 

@dp.message(Command('info_today'))
async def cmd_help(message: Message):
    await message.answer(site) 

async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('Exit')
        