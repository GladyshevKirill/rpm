"""–ú–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã set_time"""
import re
from datetime import time

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext

from bot.states.set_time import SetTime
from bot.models import User
from bot.singleton import GlobalVars

router = Router()
TIME_PATTERN = r'^([0-9]|1[0-9]|2[0-3]):([0-5]\d)$'

@router.message(Command("set_time"))
async def set_time_handler(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã set_time"""
    await state.set_state(SetTime.time)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á—á:–º–º –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤")


@router.message(F.text, SetTime.time)
async def set_time_by_notification_handler(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–æ–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"""
    match = re.match(TIME_PATTERN, message.text)
    if not match:
        await message.answer("–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!")
        return
    hour = int(match.group(1))
    minute = int(match.group(2))
    new_time = time(hour=hour, minute=minute)
    user = User.get(tg_user=message.from_user.id)
    user.time = new_time
    user.save()
    GlobalVars.SEND_TIME = new_time

    await state.clear()
    

    inline_markup = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='üåç –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏', callback_data='11'),
            InlineKeyboardButton(text='üá∑üá∫ –ü—Ä–∞–∑–¥–Ω–∏–∫–∏ –≤ –†–æ—Å—Å–∏–∏',callback_data='22')
        ],
        [
            InlineKeyboardButton(text='‚ò¶Ô∏è –¶–µ—Ä–∫–æ–≤–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏',callback_data='33'),
            InlineKeyboardButton(text='üéÇ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–µ–π',callback_data='44')
        ],
        [
            InlineKeyboardButton(text='ü™∂–ü–∞–º—è—Ç–Ω—ã–µ –¥–∞—Ç—ã –≤ –∏—Å—Ç–æ—Ä–∏–∏',callback_data='55'),
            InlineKeyboardButton(text='üéÅ –ö—Ç–æ —Å–µ–≥–æ–¥–Ω—è –æ—Ç–º–µ—á–∞–µ—Ç –∏–º–µ–Ω–∏–Ω—ã',callback_data='6')
        ]
    ])
    await message.answer("–í—Ä–µ–º—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç", reply_markup=inline_markup)

@router.message(SetTime.time)
async def set_other_by_notification_handler(message: Message):
    """–°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ —Ç–µ–∫—Å—Ç —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º"""
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á—á:–º–º –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤")
